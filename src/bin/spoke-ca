#!/usr/bin/env python
"""Command line interface to Spoke CA API."""

# core modules
import sys
from optparse import OptionParser, OptionGroup

# own modules
import error
import config
import logger
import common

version = common.version

default_config_file = '/usr/local/pkg/spoke/etc/spoke.conf'

def main():
    usage = """Usage: spoke-ca [options] -ARH [args]

Manage Certificate Authority Functions

Arguments:
    CA_NAME     The name of the certificate authority (corresponds to a 
                directory on a filesystem).  E.g. my-ca
    CN          Common Name of certificate or authority.
                E.g. www.foo.com or Root Certificate Authority
    ALT_NAME    Alternative name for certificate.  E.g. foo.com or host1

Examples:
    spoke-ca --help
    spoke-ca -v -A -C myca "My Root CA"
    spoke-ca --requester myca -RC www.test.com
"""
    parser = OptionParser(usage, version=version)
    group = OptionGroup(parser, "Common Options")
    group.add_option('-v', '--verbose', action='store_true', 
                          dest='verbose', help="verbose console logging")
    group.add_option('-q', '--quiet', action='store_true', 
                          dest='quiet', help="no console logging")
    group.add_option('-f', '--force', action='store_true',
                          dest='force', help="don't prompt for confirmation")
    group.add_option('-c', '--config', action='store', dest='config_file', 
                     metavar='CONF', default=default_config_file,
                     help="config file, [default: %default]")
    group.add_option('-r', '--requester', action='store', dest='requester', 
                     default=None, help="The name of the certificate authority issuing the request [default: ca_default_ca] as found in spoke.conf")
    group.add_option('-s', '--signer', action='store', dest='signer', 
                     default=None, help="The name of the signing certificate authority (if omitted, all operations will be self-signed).")
    group.add_option('-S', '--search', action='store_true',
                          dest='search', help="search for an object")
    group.add_option('-C', '--create', action='store_true',
                          dest='create', help="create an object")
    group.add_option('-D', '--delete', action='store_true',
                          dest='delete', help="delete an object")
    parser.add_option_group(group)
        
    group = OptionGroup(parser, "Certificate Authority Options",
        "Usage: spoke-ca -A [OPTIONS] CA_NAME [CN]")
    parser.add_option_group(group)
    group.add_option('-A', '--authority', action='store_true',
                          dest='authority', help="perform an action on a Certificate Authority (object)")

    group = OptionGroup(parser, "Certificate Request Options",
        "Usage: spoke-ca -R [OPTIONS] CN")
    parser.add_option_group(group)
    group.add_option('-R', '--request', action='store_true',
                          dest='request', help="perform an action on a Certificate Request (object)")

        
    group = OptionGroup(parser, "Certificate Options",
        "Usage: spoke-ca -X [OPTIONS] CN [ALT_NAME]")
    parser.add_option_group(group)
    group.add_option('-H', '--hostcert', action='store_true',
                          dest='hostcert', help="perform an action on a Host Certificate (object)")
    
    (options, args) = parser.parse_args()

    try:
        conf = config.setup(options.config_file)
    except error.ConfigError, e:
        print e.msg
        raise e

    log = logger.setup('main', verbose=options.verbose, quiet=options.quiet)
    
    # Set options
    if options.requester:
        requester = options.requester
    else:
        try:
            requester = conf.get('CA', 'ca_default_ca')
        except: pass
    if options.signer:
        signer = options.signer
    else:
        signer = None
        
    # Parse args
    if len(args) > 2:
        parser.error("Too many args")
    if options.authority:
        if options.create:
            if len(args) != 2:
                parser.error("Please supply a CA_NAME and CN")
            else:
                (ca_name, cn) = args
        else:    
            if len(args) != 1:
                parser.error("Please supply a CA_NAME")
            else:
                ca_name = args[0]
                cn = None
    elif options.request:
        if len(args) < 1:
            parser.error("Please supply a CN")
        elif len(args) > 1:
            parser.error("Too many args")
        else:
            cn = args[0]
    elif options.hostcert:
        if len(args) < 1:
            parser.error("Please supply a CN")
        elif len(args) == 1:
            cn = args[0]
            alt_name = None
        else:
            (cn, alt_name) = args
            if alt_name and not options.create:
                parser.error('ALT_NAME can only be used with -c --create')

    # Perform action
    if options.authority:
        try:
            from ca import SpokeCA
            CA = SpokeCA(ca_name)             
            if options.search:
                result = CA.get()   
            elif options.create:                                
                result = CA.create(cn, signer=signer)
            elif options.delete:
                result = CA.delete()
            else:
                parser.error('Unknown option; please specify one of: -SCMD')  
            log.info(result['msg'])
            if (options.search and result['count'] > 0) or options.create:
                log.info(result['data'])
        except error.SpokeError, e:
            log.error(e.msg)
            if e.traceback:
                log.debug(e.traceback)
            raise e
        
    elif options.request:
        try:
            from ca import SpokeCSR
            CSR = SpokeCSR(cn, requester=requester)
            if options.search:
                result = CSR.get()   
            elif options.create:                                     
                result = CSR.create()
            elif options.delete:
                result = CSR.delete()
            else:
                parser.error('Unknown option; please specify one of: -SCMD') 
            log.info(result['msg'])
            if (options.search or options.create) and result['count'] > 0:
                log.info(result['data'])
        except error.SpokeError, e:
            log.error(e.msg)
            if e.traceback:
                log.debug(e.traceback)
            raise e
    elif options.hostcert:
        try:
            from ca import SpokeHostCert
            CERT = SpokeHostCert(cn, requester=requester)
            if options.search:
                result = CERT.get()   
            elif options.create:                                     
                result = CERT.create(alt_name)
            elif options.delete:
                result = CERT.delete()
            else:
                parser.error('Unknown option; please specify one of: -SCMD') 
            log.info(result['msg'])
            if (options.search and result['count'] > 0) or options.create:
                log.info(result['data'])
        except error.SpokeError, e:
            log.error(e.msg)
            if e.traceback:
                log.debug(e.traceback)
            raise e
    else:
        parser.error("Unknown action: please specify one of -ARH")
   
if __name__ == '__main__':
    try:
        main()
    except error.ConfigError, e:
        print e.msg
        sys.exit(e.exit_code)
    except error.SpokeError, e:
        sys.exit(e.exit_code)
    except Exception, e:
        print '''Sorry, something went wrong, you shouldn't be seeing this:'''
        print e